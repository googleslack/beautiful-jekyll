#!/usr/bin/env node
"use strict";
const program = require("commander");
const global_1 = require("../lib/core/global");
const logging_helper_1 = require("../lib/core/logging-helper");
const bst_proxy_1 = require("../lib/client/bst-proxy");
const url_mangler_1 = require("../lib/client/url-mangler");
global_1.Global.initializeCLI();
let handleOptions = function (proxy, options) {
    if (options.bstHost !== undefined) {
        proxy.bespokenServer(options.bstHost, options.bstPort);
    }
    if (options.verbose !== undefined && options.verbose) {
        console.log("Enabling verbose logging");
        logging_helper_1.LoggingHelper.setVerbose(true);
    }
};
program
    .command("http <http-port>")
    .option("--bstHost <bstHost>", "The host name of the BST server")
    .option("--bstPort <bstPort>", "The port of the BST server", parseInt)
    .option("--verbose", "Print out verbose diagnostics")
    .description("Proxies an HTTP service running at the specified port")
    .action(function (port, options) {
    console.log("Your URL for Alexa Skill configuration:");
    console.log(url_mangler_1.URLMangler.mangleJustPath("/YOUR/SKILL/PATH", global_1.Global.config().nodeID()));
    console.log("(Be sure to put in your real path and other query string parameters!)");
    console.log("");
    let proxy = bst_proxy_1.BSTProxy.http(port);
    handleOptions(proxy, options);
    proxy.start();
});
program
    .command("lambda <lambda-file>")
    .option("--bstHost <bstHost>", "The host name of the BST server")
    .option("--bstPort <bstPort>", "The port of the BST server", parseInt)
    .option("--verbose", "Print out verbose diagnostics")
    .description("Proxies a AWS Lambda defined in the specified file")
    .action(function (lambdaFile, options) {
    console.log("Your URL for Alexa Skill configuration:");
    console.log(url_mangler_1.URLMangler.mangleNoPath(global_1.Global.config().nodeID()));
    console.log("");
    let proxy = bst_proxy_1.BSTProxy.lambda(lambdaFile);
    handleOptions(proxy, options);
    proxy.start();
});
program
    .command("stop")
    .description("Stops any existing proxy that is running")
    .action(function (port, options) {
    if (global_1.Global.running() === null) {
        console.log("We do not see any proxy running");
        console.log();
    }
    else {
        if (global_1.Global.running().kill()) {
            console.log("Proxy process stopped.");
            console.log();
        }
        else {
            console.error("Proxy process failed to stop.");
            console.error();
        }
    }
});
program
    .command("urlgen <alexa-url>")
    .description("Generates the URL to be used in the Alexa Skill configuration")
    .action(function (url) {
    let bstURL = bst_proxy_1.BSTProxy.urlgen(url);
    console.log("Enter this URL on the Configuration tab of your skill:");
    console.log();
    console.log("\t" + bstURL);
    console.log();
});
if (process.argv.length < 3) {
    program.outputHelp();
}
program.parse(process.argv);
//# sourceMappingURL=bst-proxy.js.map